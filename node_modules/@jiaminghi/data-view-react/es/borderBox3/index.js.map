{"version":3,"file":"index.js","sources":["../../src/components/borderBox3/index.js"],"sourcesContent":["import React, { useMemo, forwardRef } from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport classnames from 'classnames'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nimport useAutoResize from '../../use/autoResize'\n\nimport './style.less'\n\nconst defaultColor = ['#2862b7', '#2862b7']\n\nconst BorderBox = forwardRef(({ children, className, style, color = [] }, ref) => {\n  const { width, height, domRef } = useAutoResize(ref)\n\n  const mergedColor = useMemo(() => deepMerge(deepClone(defaultColor, true), color || []), [color])\n\n  const classNames = useMemo(() => classnames('dv-border-box-3', className), [\n    className\n  ])\n\n  return (\n    <div className={classNames} style={style} ref={domRef}>\n      <svg className='dv-border-svg-container' width={width} height={height}>\n        <polyline\n          className='dv-bb3-line1'\n          stroke={mergedColor[0]}\n          points={`4, 4 ${width - 22} ,4 ${width - 22}, ${height -\n            22} 4, ${height - 22} 4, 4`}\n        />\n        <polyline\n          className='dv-bb3-line2'\n          stroke={mergedColor[1]}\n          points={`10, 10 ${width - 16}, 10 ${width - 16}, ${height -\n            16} 10, ${height - 16} 10, 10`}\n        />\n        <polyline\n          className='dv-bb3-line2'\n          stroke={mergedColor[1]}\n          points={`16, 16 ${width - 10}, 16 ${width - 10}, ${height -\n            10} 16, ${height - 10} 16, 16`}\n        />\n        <polyline\n          className='dv-bb3-line2'\n          stroke={mergedColor[1]}\n          points={`22, 22 ${width - 4}, 22 ${width - 4}, ${height -\n            4} 22, ${height - 4} 22, 22`}\n        />\n      </svg>\n\n      <div className='border-box-content'>{children}</div>\n    </div>\n  )\n})\n\nBorderBox.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  color: PropTypes.array\n}\n\nexport default BorderBox\n"],"names":["defaultColor","BorderBox","forwardRef","ref","children","className","style","color","useAutoResize","width","height","domRef","mergedColor","useMemo","deepMerge","deepClone","classNames","classnames","propTypes","PropTypes","node","string","object","array"],"mappings":";;;;;;;;;;;AAaA,IAAMA,eAAe,CAAC,SAAD,EAAY,SAAZ,CAArB;;AAEA,IAAMC,YAAYC,WAAW,gBAA6CC,GAA7C,EAAqD;AAAA,MAAlDC,QAAkD,QAAlDA,QAAkD;AAAA,MAAxCC,SAAwC,QAAxCA,SAAwC;AAAA,MAA7BC,KAA6B,QAA7BA,KAA6B;AAAA,wBAAtBC,KAAsB;AAAA,MAAtBA,KAAsB,8BAAd,EAAc;;AAAA,uBAC9CC,cAAcL,GAAd,CAD8C;AAAA,MACxEM,KADwE,kBACxEA,KADwE;AAAA,MACjEC,MADiE,kBACjEA,MADiE;AAAA,MACzDC,MADyD,kBACzDA,MADyD;;AAGhF,MAAMC,cAAcC,QAAQ;AAAA,WAAMC,OAAUC,OAAUf,YAAV,EAAwB,IAAxB,CAAV,EAAyCO,SAAS,EAAlD,CAAN;AAAA,GAAR,EAAqE,CAACA,KAAD,CAArE,CAApB;;AAEA,MAAMS,aAAaH,QAAQ;AAAA,WAAMI,WAAW,iBAAX,EAA8BZ,SAA9B,CAAN;AAAA,GAAR,EAAwD,CACzEA,SADyE,CAAxD,CAAnB;;AAIA,SACE;AAAA;AAAA,MAAK,WAAWW,UAAhB,EAA4B,OAAOV,KAAnC,EAA0C,KAAKK,MAA/C;AACE;AAAA;AAAA,QAAK,WAAU,yBAAf,EAAyC,OAAOF,KAAhD,EAAuD,QAAQC,MAA/D;AACE;AACE,mBAAU,cADZ;AAEE,gBAAQE,YAAY,CAAZ,CAFV;AAGE,2BAAgBH,QAAQ,EAAxB,cAAiCA,QAAQ,EAAzC,YAAgDC,SAC9C,EADF,cACWA,SAAS,EADpB;AAHF,QADF;AAOE;AACE,mBAAU,cADZ;AAEE,gBAAQE,YAAY,CAAZ,CAFV;AAGE,6BAAkBH,QAAQ,EAA1B,eAAoCA,QAAQ,EAA5C,YAAmDC,SACjD,EADF,eACYA,SAAS,EADrB;AAHF,QAPF;AAaE;AACE,mBAAU,cADZ;AAEE,gBAAQE,YAAY,CAAZ,CAFV;AAGE,6BAAkBH,QAAQ,EAA1B,eAAoCA,QAAQ,EAA5C,YAAmDC,SACjD,EADF,eACYA,SAAS,EADrB;AAHF,QAbF;AAmBE;AACE,mBAAU,cADZ;AAEE,gBAAQE,YAAY,CAAZ,CAFV;AAGE,6BAAkBH,QAAQ,CAA1B,eAAmCA,QAAQ,CAA3C,YAAiDC,SAC/C,CADF,eACWA,SAAS,CADpB;AAHF;AAnBF,KADF;AA4BE;AAAA;AAAA,QAAK,WAAU,oBAAf;AAAqCN;AAArC;AA5BF,GADF;AAgCD,CAzCiB,CAAlB;;AA2CAH,UAAUiB,SAAV,GAAsB;AACpBd,YAAUe,UAAUC,IADA;AAEpBf,aAAWc,UAAUE,MAFD;AAGpBf,SAAOa,UAAUG,MAHG;AAIpBf,SAAOY,UAAUI;AAJG,CAAtB;;;;"}