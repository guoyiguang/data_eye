{"version":3,"file":"index.js","sources":["../../src/components/flylineChart/index.js"],"sourcesContent":["import React, { useEffect, useState, useRef, useCallback, useMemo, forwardRef } from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport classnames from 'classnames'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nimport useAutoResize from '../../use/autoResize'\n\nimport { randomExtend, getPointDistance } from '../../util/index'\n\nimport './style.less'\n\nconst defaultConfig = {\n  /**\n   * @description Flyline chart center point\n   * @type {Array<Number>}\n   * @default centerPoint = [0, 0]\n   */\n  centerPoint: [0, 0],\n  /**\n   * @description Flyline start points\n   * @type {Array<Array<Number>>}\n   * @default points = []\n   * @example points = [[10, 10], [100, 100]]\n   */\n  points: [],\n  /**\n   * @description Flyline width\n   * @type {Number}\n   * @default lineWidth = 1\n   */\n  lineWidth: 1,\n  /**\n   * @description Orbit color\n   * @type {String}\n   * @default orbitColor = 'rgba(103, 224, 227, .2)'\n   */\n  orbitColor: 'rgba(103, 224, 227, .2)',\n  /**\n   * @description Flyline color\n   * @type {String}\n   * @default orbitColor = '#ffde93'\n   */\n  flylineColor: '#ffde93',\n  /**\n   * @description K value\n   * @type {Number}\n   * @default k = -0.5\n   * @example k = -1 ~ 1\n   */\n  k: -0.5,\n  /**\n   * @description Flyline curvature\n   * @type {Number}\n   * @default curvature = 5\n   */\n  curvature: 5,\n  /**\n   * @description Flyline radius\n   * @type {Number}\n   * @default flylineRadius = 100\n   */\n  flylineRadius: 100,\n  /**\n   * @description Flyline animation duration\n   * @type {Array<Number>}\n   * @default duration = [20, 30]\n   */\n  duration: [20, 30],\n  /**\n   * @description Relative points position\n   * @type {Boolean}\n   * @default relative = true\n   */\n  relative: true,\n  /**\n   * @description Back ground image url\n   * @type {String}\n   * @default bgImgUrl = ''\n   * @example bgImgUrl = './img/bg.jpg'\n   */\n  bgImgUrl: '',\n  /**\n   * @description Text configuration\n   * @type {Object}\n   */\n  text: {\n    /**\n     * @description Text offset\n     * @type {Array<Number>}\n     * @default offset = [0, 15]\n     */\n    offset: [0, 15],\n    /**\n     * @description Text color\n     * @type {String}\n     * @default color = '#ffdb5c'\n     */\n    color: '#ffdb5c',\n    /**\n     * @description Text font size\n     * @type {Number}\n     * @default fontSize = 12\n     */\n    fontSize: 12\n  },\n  /**\n   * @description Halo configuration\n   * @type {Object}\n   */\n  halo: {\n    /**\n     * @description Weather to show halo\n     * @type {Boolean}\n     * @default show = true\n     * @example show = true | false\n     */\n    show: true,\n    /**\n     * @description Halo animation duration (10 = 1s)\n     * @type {Number}\n     * @default duration = 30\n     */\n    duration: 30,\n    /**\n     * @description Halo color\n     * @type {String}\n     * @default color = '#fb7293'\n     */\n    color: '#fb7293',\n    /**\n     * @description Halo max radius\n     * @type {Number}\n     * @default radius = 120\n     */\n    radius: 120\n  },\n  /**\n   * @description Center point img configuration\n   * @type {Object}\n   */\n  centerPointImg: {\n    /**\n     * @description Center point img width\n     * @type {Number}\n     * @default width = 40\n     */\n    width: 40,\n    /**\n     * @description Center point img height\n     * @type {Number}\n     * @default height = 40\n     */\n    height: 40,\n    /**\n     * @description Center point img url\n     * @type {String}\n     * @default url = ''\n     */\n    url: ''\n  },\n  /**\n   * @description Points img configuration\n   * @type {Object}\n   * @default radius = 120\n   */\n  pointsImg: {\n    /**\n     * @description Points img width\n     * @type {Number}\n     * @default width = 15\n     */\n    width: 15,\n    /**\n     * @description Points img height\n     * @type {Number}\n     * @default height = 15\n     */\n    height: 15,\n    /**\n     * @description Points img url\n     * @type {String}\n     * @default url = ''\n     */\n    url: ''\n  }\n}\n\nfunction getControlPoint([sx, sy], [ex, ey], { curvature, k }) {\n  const [mx, my] = [(sx + ex) / 2, (sy + ey) / 2]\n\n  const distance = getPointDistance([sx, sy], [ex, ey])\n\n  const targetLength = distance / curvature\n  const disDived = targetLength / 2\n\n  let [dx, dy] = [mx, my]\n\n  do {\n    dx += disDived\n    dy = my - k * mx + k * dx\n  } while (getPointDistance([mx, my], [dx, dy]) < targetLength)\n\n  return [dx, dy]\n}\n\nconst FlyLineChart = forwardRef(({ config = {}, dev = false, className, style }, ref) => {\n  const { width, height, domRef } = useAutoResize(ref)\n\n  const { unique, gradientId, gradient2Id } = useRef({\n    unique: Math.random(),\n    gradientId: `gradient-id-${Date.now()}`,\n    gradient2Id: `gradient2-id-${Date.now()}`\n  }).current\n\n  const { mergedConfig, paths, times, texts } = useMemo(calcData, [\n    config,\n    width,\n    height\n  ])\n\n  const [lengths, setLengths] = useState([])\n\n  const pathDomRef = useRef([])\n\n  function calcData() {\n    const mergedConfig = getMergedConfig()\n\n    const paths = createFlylinePaths(mergedConfig)\n\n    const { duration, points } = mergedConfig\n\n    const times = points.map(foo => randomExtend(...duration) / 10)\n\n    const texts = points.map(({ text }) => text)\n\n    return { mergedConfig, paths, times, texts }\n  }\n\n  function getMergedConfig() {\n    const mergedConfig = deepMerge(deepClone(defaultConfig, true), config || {})\n\n    mergedConfig.points = mergedConfig.points.map(item => {\n      if (Array.isArray(item)) {\n        return { position: item, text: '' }\n      }\n\n      return item\n    })\n\n    return mergedConfig\n  }\n\n  function createFlylinePaths(mergedConfig) {\n    let { centerPoint, relative } = mergedConfig\n    let points = mergedConfig.points.map(({ position }) => position)\n\n    if (relative) {\n      centerPoint = [width * centerPoint[0], height * centerPoint[1]]\n      points = points.map(([x, y]) => [width * x, height * y])\n    }\n\n    return points.map(point => {\n      const controlPoint = getControlPoint(centerPoint, point, mergedConfig)\n\n      return [point, controlPoint, centerPoint]\n    })\n  }\n\n  const consoleClickPos = useCallback(\n    ({ offsetX, offsetY }) => {\n      if (!dev) return\n\n      const relativeX = (offsetX / width).toFixed(2)\n      const relativeY = (offsetY / height).toFixed(2)\n\n      console.warn(\n        `dv-flyline-chart DEV: \\n Click Position is [${offsetX}, ${offsetY}] \\n Relative Position is [${relativeX}, ${relativeY}]`\n      )\n    },\n    [width, height, dev]\n  )\n\n  useEffect(() => {\n    const lengths = paths.map((foo, i) =>\n      pathDomRef.current[i].getTotalLength()\n    )\n\n    setLengths(lengths)\n  }, [paths])\n\n  const classNames = useMemo(() => classnames('dv-flyline-chart', className), [\n    className\n  ])\n\n  return (\n    <div\n      className={classNames}\n      ref={domRef}\n      style={{\n        backgroundImage: `url(${mergedConfig ? mergedConfig.bgImgUrl : ''})`,\n        ...style\n      }}\n      onClick={consoleClickPos}\n    >\n      {!!mergedConfig && (\n        <svg width={width} height={height}>\n          <defs>\n            <radialGradient id={gradientId} cx='50%' cy='50%' r='50%'>\n              <stop offset='0%' stopColor='#fff' stopOpacity='1' />\n              <stop offset='100%' stopColor='#fff' stopOpacity='0' />\n            </radialGradient>\n\n            <radialGradient id={gradient2Id} cx='50%' cy='50%' r='50%'>\n              <stop offset='0%' stopColor='#fff' stopOpacity='0' />\n              <stop offset='100%' stopColor='#fff' stopOpacity='1' />\n            </radialGradient>\n\n            {!!paths[0] && (\n              <circle\n                id={`circle${paths[0].toString()}`}\n                cx={paths[0][2][0]}\n                cy={paths[0][2][1]}\n              >\n                <animate\n                  attributeName='r'\n                  values={`1;${mergedConfig.halo.radius}`}\n                  dur={mergedConfig.halo.duration / 10 + 's'}\n                  repeatCount='indefinite'\n                />\n                <animate\n                  attributeName='opacity'\n                  values='1;0'\n                  dur={mergedConfig.halo.duration / 10 + 's'}\n                  repeatCount='indefinite'\n                />\n              </circle>\n            )}\n          </defs>\n\n          {!!paths[0] && (\n            <image\n              href={mergedConfig.centerPointImg.url}\n              width={mergedConfig.centerPointImg.width}\n              height={mergedConfig.centerPointImg.height}\n              x={paths[0][2][0] - mergedConfig.centerPointImg.width / 2}\n              y={paths[0][2][1] - mergedConfig.centerPointImg.height / 2}\n            />\n          )}\n\n          <mask id={`maskhalo${paths[0].toString()}`}>\n            {!!paths[0] && (\n              <use\n                href={`#circle${paths[0].toString()}`}\n                fill={`url(#${gradient2Id})`}\n              />\n            )}\n          </mask>\n\n          {!!paths[0] && mergedConfig.halo.show && (\n            <use\n              href={`#circle${paths[0].toString()}`}\n              fill={mergedConfig.halo.color}\n              mask={`url(#maskhalo${paths[0].toString()})`}\n            />\n          )}\n\n          {paths.map((path, i) => (\n            <g key={i}>\n              <defs>\n                <path\n                  id={`path${path.toString()}`}\n                  ref={e => (pathDomRef.current[i] = e)}\n                  d={`M${path[0].toString()} Q${path[1].toString()} ${path[2].toString()}`}\n                  fill='transparent'\n                />\n              </defs>\n\n              <use\n                href={`#path${path.toString()}`}\n                strokeWidth={mergedConfig.lineWidth}\n                stroke={mergedConfig.orbitColor}\n              />\n\n              {lengths[i] && (\n                <use\n                  href={`#path${path.toString()}`}\n                  strokeWidth={mergedConfig.lineWidth}\n                  stroke={mergedConfig.flylineColor}\n                  mask={`url(#mask${unique}${path.toString()})`}\n                >\n                  <animate\n                    attributeName='stroke-dasharray'\n                    from={`0, ${lengths[i]}`}\n                    to={`${lengths[i]}, 0`}\n                    dur={times[i] || 0}\n                    repeatCount='indefinite'\n                  />\n                </use>\n              )}\n\n              <mask id={`mask${unique}${path.toString()}`}>\n                <circle\n                  cx='0'\n                  cy='0'\n                  r={mergedConfig.flylineRadius}\n                  fill={`url(#${gradientId})`}\n                >\n                  <animateMotion\n                    dur={times[i] || 0}\n                    path={`M${path[0].toString()} Q${path[1].toString()} ${path[2].toString()}`}\n                    rotate='auto'\n                    repeatCount='indefinite'\n                  />\n                </circle>\n              </mask>\n\n              <image\n                href={mergedConfig.pointsImg.url}\n                width={mergedConfig.pointsImg.width}\n                height={mergedConfig.pointsImg.height}\n                x={path[0][0] - mergedConfig.pointsImg.width / 2}\n                y={path[0][1] - mergedConfig.pointsImg.height / 2}\n              />\n\n              <text\n                style={{ fontSize: `${mergedConfig.text.fontSize}px` }}\n                fill={mergedConfig.text.color}\n                x={path[0][0] + mergedConfig.text.offset[0]}\n                y={path[0][1] + mergedConfig.text.offset[1]}\n              >\n                {texts[i]}\n              </text>\n            </g>\n          ))}\n        </svg>\n      )}\n    </div>\n  )\n})\n\nFlyLineChart.propTypes = {\n  config: PropTypes.object,\n  dev: PropTypes.bool,\n  className: PropTypes.string,\n  style: PropTypes.object\n}\n\n// 指定 props 的默认值：\nFlyLineChart.defaultProps = {\n  config: {},\n  dev: false\n}\n\nexport default FlyLineChart\n"],"names":["defaultConfig","centerPoint","points","lineWidth","orbitColor","flylineColor","k","curvature","flylineRadius","duration","relative","bgImgUrl","text","offset","color","fontSize","halo","show","radius","centerPointImg","width","height","url","pointsImg","getControlPoint","sx","sy","ex","ey","mx","my","distance","getPointDistance","targetLength","disDived","dx","dy","FlyLineChart","forwardRef","ref","config","dev","className","style","useAutoResize","domRef","useRef","unique","Math","random","gradientId","Date","now","gradient2Id","current","useMemo","calcData","mergedConfig","paths","times","texts","useState","lengths","setLengths","pathDomRef","getMergedConfig","createFlylinePaths","map","randomExtend","deepMerge","deepClone","Array","isArray","item","position","x","y","controlPoint","point","consoleClickPos","useCallback","offsetX","offsetY","relativeX","toFixed","relativeY","console","warn","useEffect","foo","i","getTotalLength","classNames","classnames","backgroundImage","toString","path","e","propTypes","PropTypes","object","bool","string","defaultProps"],"mappings":"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"}