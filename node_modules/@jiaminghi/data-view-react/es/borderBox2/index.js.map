{"version":3,"file":"index.js","sources":["../../src/components/borderBox2/index.js"],"sourcesContent":["import React, { useMemo, forwardRef } from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport classnames from 'classnames'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nimport useAutoResize from '../../use/autoResize'\n\nimport './style.less'\n\nconst defaultColor = ['#fff', 'rgba(255, 255, 255, 0.6)']\n\nconst BorderBox = forwardRef(({ children, className, style, color = [] }, ref) => {\n  const { width, height, domRef } = useAutoResize(ref)\n\n  const mergedColor = useMemo(() => deepMerge(deepClone(defaultColor, true), color || []), [color])\n\n  const classNames = useMemo(() => classnames('dv-border-box-2', className), [\n    className\n  ])\n\n  return (\n    <div className={classNames} style={style} ref={domRef}>\n      <svg className='dv-border-svg-container' width={width} height={height}>\n        <polyline\n          stroke={mergedColor[0]}\n          points={`2, 2 ${width - 2} ,2 ${width - 2}, ${height -\n            2} 2, ${height - 2} 2, 2`}\n        />\n        <polyline\n          stroke={mergedColor[1]}\n          points={`6, 6 ${width - 6}, 6 ${width - 6}, ${height -\n            6} 6, ${height - 6} 6, 6`}\n        />\n        <circle fill={mergedColor[0]} cx='11' cy='11' r='1' />\n        <circle fill={mergedColor[0]} cx={width - 11} cy='11' r='1' />\n        <circle fill={mergedColor[0]} cx={width - 11} cy={height - 11} r='1' />\n        <circle fill={mergedColor[0]} cx='11' cy={height - 11} r='1' />\n      </svg>\n      <div className='border-box-content'>{children}</div>\n    </div>\n  )\n})\n\nBorderBox.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  color: PropTypes.array\n}\n\nexport default BorderBox\n"],"names":["defaultColor","BorderBox","forwardRef","ref","children","className","style","color","useAutoResize","width","height","domRef","mergedColor","useMemo","deepMerge","deepClone","classNames","classnames","propTypes","PropTypes","node","string","object","array"],"mappings":";;;;;;;;;;;AAaA,IAAMA,eAAe,CAAC,MAAD,EAAS,0BAAT,CAArB;;AAEA,IAAMC,YAAYC,WAAW,gBAA6CC,GAA7C,EAAqD;AAAA,MAAlDC,QAAkD,QAAlDA,QAAkD;AAAA,MAAxCC,SAAwC,QAAxCA,SAAwC;AAAA,MAA7BC,KAA6B,QAA7BA,KAA6B;AAAA,wBAAtBC,KAAsB;AAAA,MAAtBA,KAAsB,8BAAd,EAAc;;AAAA,uBAC9CC,cAAcL,GAAd,CAD8C;AAAA,MACxEM,KADwE,kBACxEA,KADwE;AAAA,MACjEC,MADiE,kBACjEA,MADiE;AAAA,MACzDC,MADyD,kBACzDA,MADyD;;AAGhF,MAAMC,cAAcC,QAAQ;AAAA,WAAMC,OAAUC,OAAUf,YAAV,EAAwB,IAAxB,CAAV,EAAyCO,SAAS,EAAlD,CAAN;AAAA,GAAR,EAAqE,CAACA,KAAD,CAArE,CAApB;;AAEA,MAAMS,aAAaH,QAAQ;AAAA,WAAMI,WAAW,iBAAX,EAA8BZ,SAA9B,CAAN;AAAA,GAAR,EAAwD,CACzEA,SADyE,CAAxD,CAAnB;;AAIA,SACE;AAAA;AAAA,MAAK,WAAWW,UAAhB,EAA4B,OAAOV,KAAnC,EAA0C,KAAKK,MAA/C;AACE;AAAA;AAAA,QAAK,WAAU,yBAAf,EAAyC,OAAOF,KAAhD,EAAuD,QAAQC,MAA/D;AACE;AACE,gBAAQE,YAAY,CAAZ,CADV;AAEE,2BAAgBH,QAAQ,CAAxB,cAAgCA,QAAQ,CAAxC,YAA8CC,SAC5C,CADF,cACUA,SAAS,CADnB;AAFF,QADF;AAME;AACE,gBAAQE,YAAY,CAAZ,CADV;AAEE,2BAAgBH,QAAQ,CAAxB,cAAgCA,QAAQ,CAAxC,YAA8CC,SAC5C,CADF,cACUA,SAAS,CADnB;AAFF,QANF;AAWE,sCAAQ,MAAME,YAAY,CAAZ,CAAd,EAA8B,IAAG,IAAjC,EAAsC,IAAG,IAAzC,EAA8C,GAAE,GAAhD,GAXF;AAYE,sCAAQ,MAAMA,YAAY,CAAZ,CAAd,EAA8B,IAAIH,QAAQ,EAA1C,EAA8C,IAAG,IAAjD,EAAsD,GAAE,GAAxD,GAZF;AAaE,sCAAQ,MAAMG,YAAY,CAAZ,CAAd,EAA8B,IAAIH,QAAQ,EAA1C,EAA8C,IAAIC,SAAS,EAA3D,EAA+D,GAAE,GAAjE,GAbF;AAcE,sCAAQ,MAAME,YAAY,CAAZ,CAAd,EAA8B,IAAG,IAAjC,EAAsC,IAAIF,SAAS,EAAnD,EAAuD,GAAE,GAAzD;AAdF,KADF;AAiBE;AAAA;AAAA,QAAK,WAAU,oBAAf;AAAqCN;AAArC;AAjBF,GADF;AAqBD,CA9BiB,CAAlB;;AAgCAH,UAAUiB,SAAV,GAAsB;AACpBd,YAAUe,UAAUC,IADA;AAEpBf,aAAWc,UAAUE,MAFD;AAGpBf,SAAOa,UAAUG,MAHG;AAIpBf,SAAOY,UAAUI;AAJG,CAAtB;;;;"}