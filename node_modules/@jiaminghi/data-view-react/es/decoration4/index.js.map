{"version":3,"file":"index.js","sources":["../../src/components/decoration4/index.js"],"sourcesContent":["import React, { useMemo, forwardRef } from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport classnames from 'classnames'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nimport useAutoResize from '../../use/autoResize'\n\nimport './style.less'\n\nconst defaultColor = ['rgba(255, 255, 255, 0.3)', 'rgba(255, 255, 255, 0.3)']\n\nconst Decoration = forwardRef(({ reverse = false, className, style, color = [] }, ref) => {\n  const { width, height, domRef } = useAutoResize(ref)\n\n  const mergedColor = useMemo(() => deepMerge(deepClone(defaultColor, true), color || []), [color])\n\n  const classNames = useMemo(() => classnames('dv-decoration-4', className), [\n    className\n  ])\n\n  return (\n    <div className={classNames} style={style} ref={domRef}>\n      <div\n        className={`container ${reverse ? 'reverse' : 'normal'}`}\n        style={\n          reverse\n            ? { width: `${width}px`, height: `5px` }\n            : { width: `5px`, height: `${height}px` }\n        }\n      >\n        <svg width={reverse ? width : 5} height={reverse ? 5 : height}>\n          <polyline\n            stroke={mergedColor[0]}\n            points={reverse ? `0, 2.5 ${width}, 2.5` : `2.5, 0 2.5, ${height}`}\n          />\n          <polyline\n            className='bold-line'\n            stroke={mergedColor[1]}\n            strokeWidth='3'\n            strokeDasharray='20, 80'\n            strokeDashoffset='-30'\n            points={reverse ? `0, 2.5 ${width}, 2.5` : `2.5, 0 2.5, ${height}`}\n          />\n        </svg>\n      </div>\n    </div>\n  )\n})\n\nDecoration.propTypes = {\n  reverse: PropTypes.bool,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  color: PropTypes.array\n}\n\n// 指定 props 的默认值：\nDecoration.defaultProps = {\n  reverse: false\n}\n\nexport default Decoration\n"],"names":["defaultColor","Decoration","forwardRef","ref","reverse","className","style","color","useAutoResize","width","height","domRef","mergedColor","useMemo","deepMerge","deepClone","classNames","classnames","propTypes","PropTypes","bool","string","object","array","defaultProps"],"mappings":";;;;;;;;;;;AAaA,IAAMA,eAAe,CAAC,0BAAD,EAA6B,0BAA7B,CAArB;;AAEA,IAAMC,aAAaC,WAAW,gBAAoDC,GAApD,EAA4D;AAAA,0BAAzDC,OAAyD;AAAA,MAAzDA,OAAyD,gCAA/C,KAA+C;AAAA,MAAxCC,SAAwC,QAAxCA,SAAwC;AAAA,MAA7BC,KAA6B,QAA7BA,KAA6B;AAAA,wBAAtBC,KAAsB;AAAA,MAAtBA,KAAsB,8BAAd,EAAc;;AAAA,uBACtDC,cAAcL,GAAd,CADsD;AAAA,MAChFM,KADgF,kBAChFA,KADgF;AAAA,MACzEC,MADyE,kBACzEA,MADyE;AAAA,MACjEC,MADiE,kBACjEA,MADiE;;AAGxF,MAAMC,cAAcC,QAAQ;AAAA,WAAMC,OAAUC,OAAUf,YAAV,EAAwB,IAAxB,CAAV,EAAyCO,SAAS,EAAlD,CAAN;AAAA,GAAR,EAAqE,CAACA,KAAD,CAArE,CAApB;;AAEA,MAAMS,aAAaH,QAAQ;AAAA,WAAMI,WAAW,iBAAX,EAA8BZ,SAA9B,CAAN;AAAA,GAAR,EAAwD,CACzEA,SADyE,CAAxD,CAAnB;;AAIA,SACE;AAAA;AAAA,MAAK,WAAWW,UAAhB,EAA4B,OAAOV,KAAnC,EAA0C,KAAKK,MAA/C;AACE;AAAA;AAAA;AACE,mCAAwBP,UAAU,SAAV,GAAsB,QAA9C,CADF;AAEE,eACEA,UACI,EAAEK,OAAUA,KAAV,OAAF,EAAuBC,aAAvB,EADJ,GAEI,EAAED,YAAF,EAAgBC,QAAWA,MAAX,OAAhB;AALR;AAQE;AAAA;AAAA,UAAK,OAAON,UAAUK,KAAV,GAAkB,CAA9B,EAAiC,QAAQL,UAAU,CAAV,GAAcM,MAAvD;AACE;AACE,kBAAQE,YAAY,CAAZ,CADV;AAEE,kBAAQR,sBAAoBK,KAApB,8BAAkDC;AAF5D,UADF;AAKE;AACE,qBAAU,WADZ;AAEE,kBAAQE,YAAY,CAAZ,CAFV;AAGE,uBAAY,GAHd;AAIE,2BAAgB,QAJlB;AAKE,4BAAiB,KALnB;AAME,kBAAQR,sBAAoBK,KAApB,8BAAkDC;AAN5D;AALF;AARF;AADF,GADF;AA2BD,CApCkB,CAAnB;;AAsCAT,WAAWiB,SAAX,GAAuB;AACrBd,WAASe,UAAUC,IADE;AAErBf,aAAWc,UAAUE,MAFA;AAGrBf,SAAOa,UAAUG,MAHI;AAIrBf,SAAOY,UAAUI;;AAGnB;AAPuB,CAAvB,CAQAtB,WAAWuB,YAAX,GAA0B;AACxBpB,WAAS;AADe,CAA1B;;;;"}