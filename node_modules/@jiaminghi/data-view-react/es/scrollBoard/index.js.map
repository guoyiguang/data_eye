{"version":3,"file":"index.js","sources":["../../src/components/scrollBoard/index.js"],"sourcesContent":["import React, { useEffect, useState, useRef, useMemo, forwardRef } from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport classnames from 'classnames'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nimport useAutoResize from '../../use/autoResize'\nimport { co } from '../../util'\n\nimport './style.less'\n\nconst defaultConfig = {\n  /**\n   * @description Board header\n   * @type {Array<String>}\n   * @default header = []\n   * @example header = ['column1', 'column2', 'column3']\n   */\n  header: [],\n  /**\n   * @description Board data\n   * @type {Array<Array>}\n   * @default data = []\n   */\n  data: [],\n  /**\n   * @description Row num\n   * @type {Number}\n   * @default rowNum = 5\n   */\n  rowNum: 5,\n  /**\n   * @description Header background color\n   * @type {String}\n   * @default headerBGC = '#00BAFF'\n   */\n  headerBGC: '#00BAFF',\n  /**\n   * @description Odd row background color\n   * @type {String}\n   * @default oddRowBGC = '#003B51'\n   */\n  oddRowBGC: '#003B51',\n  /**\n   * @description Even row background color\n   * @type {String}\n   * @default evenRowBGC = '#003B51'\n   */\n  evenRowBGC: '#0A2732',\n  /**\n   * @description Scroll wait time\n   * @type {Number}\n   * @default waitTime = 2000\n   */\n  waitTime: 2000,\n  /**\n   * @description Header height\n   * @type {Number}\n   * @default headerHeight = 35\n   */\n  headerHeight: 35,\n  /**\n   * @description Column width\n   * @type {Array<Number>}\n   * @default columnWidth = []\n   */\n  columnWidth: [],\n  /**\n   * @description Column align\n   * @type {Array<String>}\n   * @default align = []\n   * @example align = ['left', 'center', 'right']\n   */\n  align: [],\n  /**\n   * @description Show index\n   * @type {Boolean}\n   * @default index = false\n   */\n  index: false,\n  /**\n   * @description index Header\n   * @type {String}\n   * @default indexHeader = '#'\n   */\n  indexHeader: '#',\n  /**\n   * @description Carousel type\n   * @type {String}\n   * @default carousel = 'single'\n   * @example carousel = 'single' | 'page'\n   */\n  carousel: 'single'\n}\n\nfunction calcHeaderData({ header, index, indexHeader }) {\n  if (!header.length) {\n    return []\n  }\n\n  header = [...header]\n\n  if (index) header.unshift(indexHeader)\n\n  return header\n}\n\nfunction calcRows({ data, index, headerBGC, rowNum }) {\n  if (index) {\n    data = data.map((row, i) => {\n      row = [...row]\n\n      const indexTag = `<span class=\"index\" style=\"background-color: ${headerBGC};\">${i +\n        1}</span>`\n\n      row.unshift(indexTag)\n\n      return row\n    })\n  }\n\n  data = data.map((ceils, i) => ({ ceils, rowIndex: i }))\n\n  const rowLength = data.length\n\n  if (rowLength > rowNum && rowLength < 2 * rowNum) {\n    data = [...data, ...data]\n  }\n\n  return data.map((d, i) => ({ ...d, scroll: i }))\n}\n\nfunction calcAligns(mergedConfig, header) {\n  const columnNum = header.length\n\n  let aligns = new Array(columnNum).fill('left')\n\n  const { align } = mergedConfig\n\n  return deepMerge(aligns, align)\n}\n\nconst ScrollBoard = forwardRef(({ onClick, config, className, style }, ref) => {\n  const { width, height, domRef } = useAutoResize(ref)\n\n  const [state, setState] = useState({\n    mergedConfig: null,\n\n    header: [],\n\n    rows: [],\n\n    widths: [],\n\n    heights: [],\n\n    aligns: []\n  })\n\n  const { mergedConfig, header, rows, widths, heights, aligns } = state\n\n  const stateRef = useRef({\n    ...state,\n    rowsData: [],\n    avgHeight: 0,\n    animationIndex: 0\n  })\n\n  Object.assign(stateRef.current, state)\n\n  function onResize() {\n    if (!mergedConfig) return\n\n    const widths = calcWidths(mergedConfig, stateRef.current.rowsData)\n\n    const heights = calcHeights(mergedConfig, header)\n\n    const data = { widths, heights }\n\n    Object.assign(stateRef.current, data)\n    setState(state => ({ ...state, ...data }))\n  }\n\n  function calcData() {\n    const mergedConfig = deepMerge(\n      deepClone(defaultConfig, true),\n      config || {}\n    )\n\n    const header = calcHeaderData(mergedConfig)\n\n    const rows = calcRows(mergedConfig)\n\n    const widths = calcWidths(mergedConfig, stateRef.current.rowsData)\n\n    const heights = calcHeights(mergedConfig, header)\n\n    const aligns = calcAligns(mergedConfig, header)\n\n    const data = {\n      mergedConfig,\n      header,\n      rows,\n      widths,\n      aligns,\n      heights\n    }\n\n    Object.assign(stateRef.current, data, {\n      rowsData: rows,\n      animationIndex: 0\n    })\n\n    setState(state => ({ ...state, ...data }))\n  }\n\n  function calcWidths({ columnWidth, header }, rowsData) {\n    const usedWidth = columnWidth.reduce((all, w) => all + w, 0)\n\n    let columnNum = 0\n    if (rowsData[0]) {\n      columnNum = rowsData[0].ceils.length\n    } else if (header.length) {\n      columnNum = header.length\n    }\n\n    const avgWidth = (width - usedWidth) / (columnNum - columnWidth.length)\n\n    const widths = new Array(columnNum).fill(avgWidth)\n\n    return deepMerge(widths, columnWidth)\n  }\n\n  function calcHeights({ headerHeight, rowNum, data }, header) {\n    let allHeight = height\n\n    if (header.length) allHeight -= headerHeight\n\n    const avgHeight = allHeight / rowNum\n\n    Object.assign(stateRef.current, { avgHeight })\n\n    return new Array(data.length).fill(avgHeight)\n  }\n\n  function * animation(start = false) {\n    let {\n      avgHeight,\n      animationIndex,\n      mergedConfig: { waitTime, carousel, rowNum },\n      rowsData\n    } = stateRef.current\n\n    const rowLength = rowsData.length\n\n    if (start) yield new Promise(resolve => setTimeout(resolve, waitTime))\n\n    const animationNum = carousel === 'single' ? 1 : rowNum\n\n    let rows = rowsData.slice(animationIndex)\n    rows.push(...rowsData.slice(0, animationIndex))\n\n    const heights = new Array(rowLength).fill(avgHeight)\n    setState(state => ({ ...state, rows, heights }))\n\n    yield new Promise(resolve => setTimeout(resolve, 300))\n\n    animationIndex += animationNum\n\n    const back = animationIndex - rowLength\n    if (back >= 0) animationIndex = back\n\n    const newHeights = [...heights]\n    newHeights.splice(0, animationNum, ...new Array(animationNum).fill(0))\n\n    Object.assign(stateRef.current, { animationIndex })\n    setState(state => ({ ...state, heights: newHeights }))\n  }\n\n  function emitEvent(ri, ci, row, ceil) {\n    const { ceils, rowIndex } = row\n\n    onClick && onClick({ row: ceils, ceil, rowIndex, columnIndex: ci })\n  }\n\n  const getBackgroundColor = rowIndex =>\n    mergedConfig[rowIndex % 2 === 0 ? 'evenRowBGC' : 'oddRowBGC']\n\n  useEffect(() => {\n    calcData()\n\n    let start = true\n\n    function * loop() {\n      while (true) {\n        yield * animation(start)\n\n        start = false\n\n        const { waitTime } = stateRef.current.mergedConfig\n\n        yield new Promise(resolve => setTimeout(resolve, waitTime - 300))\n      }\n    }\n\n    const {\n      mergedConfig: { rowNum },\n      rows: rowsData\n    } = stateRef.current\n\n    const rowLength = rowsData.length\n\n    if (rowNum >= rowLength) return\n\n    return co(loop)\n  }, [config, domRef.current])\n\n  useEffect(onResize, [width, height, domRef.current])\n\n  const classNames = useMemo(() => classnames('dv-scroll-board', className), [\n    className\n  ])\n\n  return (\n    <div className={classNames} style={style} ref={domRef}>\n      {!!header.length && !!mergedConfig && (\n        <div\n          className='header'\n          style={{ backgroundColor: `${mergedConfig.headerBGC}` }}\n        >\n          {header.map((headerItem, i) => (\n            <div\n              className='header-item'\n              key={headerItem + i}\n              style={{\n                height: `${mergedConfig.headerHeight}px`,\n                lineHeight: `${mergedConfig.headerHeight}px`,\n                width: `${widths[i]}px`\n              }}\n              align={aligns[i]}\n              dangerouslySetInnerHTML={{ __html: headerItem }}\n            />\n          ))}\n        </div>\n      )}\n\n      {!!mergedConfig && (\n        <div\n          className='rows'\n          style={{\n            height: `${height -\n              (header.length ? mergedConfig.headerHeight : 0)}px`\n          }}\n        >\n          {rows.map((row, ri) => (\n            <div\n              className='row-item'\n              key={row.toString() + row.scroll}\n              style={{\n                height: `${heights[ri]}px`,\n                lineHeight: `${heights[ri]}px`,\n                backgroundColor: `${getBackgroundColor(row.rowIndex)}`\n              }}\n            >\n              {row.ceils.map((ceil, ci) => (\n                <div\n                  className='ceil'\n                  key={ceil + ri + ci}\n                  style={{ width: `${widths[ci]}px` }}\n                  align={aligns[ci]}\n                  dangerouslySetInnerHTML={{ __html: ceil }}\n                  onClick={() => emitEvent(ri, ci, row, ceil)}\n                />\n              ))}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  )\n})\n\nScrollBoard.propTypes = {\n  config: PropTypes.object,\n  onClick: PropTypes.func,\n  className: PropTypes.string,\n  style: PropTypes.object\n}\n\n// 指定 props 的默认值：\nScrollBoard.defaultProps = {\n  config: {}\n}\n\nexport default ScrollBoard\n"],"names":["defaultConfig","header","data","rowNum","headerBGC","oddRowBGC","evenRowBGC","waitTime","headerHeight","columnWidth","align","index","indexHeader","carousel","calcHeaderData","length","unshift","calcRows","map","row","i","indexTag","ceils","rowIndex","rowLength","d","scroll","calcAligns","mergedConfig","columnNum","aligns","Array","fill","deepMerge","ScrollBoard","forwardRef","ref","onClick","config","className","style","animation","useAutoResize","width","height","domRef","useState","rows","widths","heights","state","setState","stateRef","useRef","rowsData","avgHeight","animationIndex","Object","assign","current","onResize","calcWidths","calcHeights","calcData","deepClone","usedWidth","reduce","all","w","avgWidth","allHeight","start","Promise","setTimeout","resolve","animationNum","slice","push","back","newHeights","splice","emitEvent","ri","ci","ceil","columnIndex","getBackgroundColor","useEffect","loop","co","classNames","useMemo","classnames","backgroundColor","headerItem","lineHeight","__html","toString","propTypes","PropTypes","object","func","string","defaultProps"],"mappings":"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"}