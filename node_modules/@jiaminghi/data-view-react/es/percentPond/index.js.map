{"version":3,"file":"index.js","sources":["../../src/components/percentPond/index.js"],"sourcesContent":["import React, { useEffect, useState, useRef, useMemo } from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport classnames from 'classnames'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nimport './style.less'\n\nconst defaultConfig = {\n  /**\n   * @description Value\n   * @type {Number}\n   * @default value = 0\n   */\n  value: 0,\n  /**\n   * @description Colors (hex|rgb|rgba|color keywords)\n   * @type {Array<String>}\n   * @default colors = ['#00BAFF', '#3DE7C9']\n   * @example colors = ['#000', 'rgb(0, 0, 0)', 'rgba(0, 0, 0, 1)', 'red']\n   */\n  colors: ['#3DE7C9', '#00BAFF'],\n  /**\n   * @description Border width\n   * @type {Number}\n   * @default borderWidth = 3\n   */\n  borderWidth: 3,\n  /**\n   * @description Gap between border and pond\n   * @type {Number}\n   * @default borderGap = 3\n   */\n  borderGap: 3,\n  /**\n   * @description Line dash\n   * @type {Array<Number>}\n   * @default lineDash = [5, 1]\n   */\n  lineDash: [5, 1],\n  /**\n   * @description Text color\n   * @type {String}\n   * @default textColor = '#fff'\n   */\n  textColor: '#fff',\n  /**\n   * @description Border radius\n   * @type {Number}\n   * @default borderRadius = 5\n   */\n  borderRadius: 5,\n  /**\n   * @description Local Gradient\n   * @type {Boolean}\n   * @default localGradient = false\n   * @example localGradient = false | true\n   */\n  localGradient: false,\n  /**\n   * @description Formatter\n   * @type {String}\n   * @default formatter = '{value}%'\n   */\n  formatter: '{value}%'\n}\n\nconst PercentPond = ({ config = {}, className, style }) => {\n  const domRef = useRef(null)\n\n  const { gradientId1, gradientId2 } = useRef({\n    gradientId1: `percent-pond-gradientId1-${Date.now()}`,\n    gradientId2: `percent-pond-gradientId2-${Date.now()}`\n  }).current\n\n  const [{ width, height, mergedConfig }, setState] = useState({\n    width: 0,\n    height: 0,\n\n    mergedConfig: null\n  })\n\n  const rectWidth = useMemo(() => {\n    if (!mergedConfig) return 0\n\n    const { borderWidth } = mergedConfig\n\n    return width - borderWidth\n  }, [mergedConfig, width])\n\n  const rectHeight = useMemo(() => {\n    if (!mergedConfig) return 0\n\n    const { borderWidth } = mergedConfig\n\n    return height - borderWidth\n  }, [mergedConfig, height])\n\n  const points = useMemo(() => {\n    const halfHeight = height / 2\n\n    if (!mergedConfig) return `0, ${halfHeight} 0, ${halfHeight}`\n\n    const { borderWidth, borderGap, value } = mergedConfig\n\n    const polylineLength =\n      ((width - (borderWidth + borderGap) * 2) / 100) * value\n\n    return `\n      ${borderWidth + borderGap}, ${halfHeight}\n      ${borderWidth + borderGap + polylineLength}, ${halfHeight + 0.001}\n    `\n  }, [mergedConfig, width, height])\n\n  const polylineWidth = useMemo(() => {\n    if (!mergedConfig) return 0\n\n    const { borderWidth, borderGap } = mergedConfig\n\n    return height - (borderWidth + borderGap) * 2\n  }, [mergedConfig, height])\n\n  const linearGradient = useMemo(() => {\n    if (!mergedConfig) return []\n\n    const { colors } = mergedConfig\n\n    const colorNum = colors.length\n\n    const colorOffsetGap = 100 / (colorNum - 1)\n\n    return colors.map((c, i) => [colorOffsetGap * i, c])\n  }, [mergedConfig])\n\n  const polylineGradient = useMemo(() => {\n    if (!mergedConfig) return gradientId2\n\n    if (mergedConfig.localGradient) return gradientId1\n\n    return gradientId2\n  }, [gradientId1, gradientId2, mergedConfig])\n\n  const gradient2XPos = useMemo(() => {\n    if (!mergedConfig) return '100%'\n\n    const { value } = mergedConfig\n\n    return `${200 - value}%`\n  }, [mergedConfig])\n\n  const details = useMemo(() => {\n    if (!mergedConfig) return ''\n\n    const { value, formatter } = mergedConfig\n\n    return formatter.replace('{value}', value)\n  }, [mergedConfig])\n\n  useEffect(() => {\n    const { clientWidth: width, clientHeight: height } = domRef.current\n\n    setState({\n      width,\n      height,\n      mergedConfig: deepMerge(deepClone(defaultConfig, true), config || {})\n    })\n  }, [config])\n\n  const classNames = useMemo(() => classnames('dv-percent-pond', className), [\n    className\n  ])\n\n  return (\n    <div className={classNames} style={style} ref={domRef}>\n      <svg>\n        <defs>\n          <linearGradient id={gradientId1} x1='0%' y1='0%' x2='100%' y2='0%'>\n            {linearGradient.map(lc => (\n              <stop key={lc[0]} offset={`${lc[0]}%`} stopColor={lc[1]} />\n            ))}\n          </linearGradient>\n\n          <linearGradient\n            id={gradientId2}\n            x1='0%'\n            y1='0%'\n            x2={gradient2XPos}\n            y2='0%'\n          >\n            {linearGradient.map(lc => (\n              <stop key={lc[0]} offset={`${lc[0]}%`} stopColor={lc[1]} />\n            ))}\n          </linearGradient>\n        </defs>\n        <rect\n          x={mergedConfig ? mergedConfig.borderWidth / 2 : '0'}\n          y={mergedConfig ? mergedConfig.borderWidth / 2 : '0'}\n          rx={mergedConfig ? mergedConfig.borderRadius : '0'}\n          ry={mergedConfig ? mergedConfig.borderRadius : '0'}\n          fill='transparent'\n          strokeWidth={mergedConfig ? mergedConfig.borderWidth : '0'}\n          stroke={`url(#${gradientId1})`}\n          width={rectWidth > 0 ? rectWidth : 0}\n          height={rectHeight > 0 ? rectHeight : 0}\n        />\n        <polyline\n          strokeWidth={polylineWidth}\n          strokeDasharray={mergedConfig ? mergedConfig.lineDash.join(',') : '0'}\n          stroke={`url(#${polylineGradient})`}\n          points={points}\n        />\n        <text\n          stroke={mergedConfig ? mergedConfig.textColor : '#fff'}\n          fill={mergedConfig ? mergedConfig.textColor : '#fff'}\n          x={width / 2}\n          y={height / 2}\n        >\n          {details}\n        </text>\n      </svg>\n    </div>\n  )\n}\n\nPercentPond.propTypes = {\n  config: PropTypes.object,\n  className: PropTypes.string,\n  style: PropTypes.object\n}\n\n// 指定 props 的默认值：\nPercentPond.defaultProps = {\n  config: {}\n}\n\nexport default PercentPond\n"],"names":["defaultConfig","value","colors","borderWidth","borderGap","lineDash","textColor","borderRadius","localGradient","formatter","PercentPond","config","className","style","domRef","useRef","gradientId1","Date","now","gradientId2","current","useState","width","height","mergedConfig","setState","rectWidth","useMemo","rectHeight","points","halfHeight","polylineLength","polylineWidth","linearGradient","colorNum","length","colorOffsetGap","map","c","i","polylineGradient","gradient2XPos","details","replace","useEffect","clientWidth","clientHeight","deepMerge","deepClone","classNames","classnames","lc","join","propTypes","PropTypes","object","string","defaultProps"],"mappings":"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"}