{"version":3,"file":"index.js","sources":["../../src/components/borderBox13/index.js"],"sourcesContent":["import React, { useMemo, forwardRef } from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport classnames from 'classnames'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nimport useAutoResize from '../../use/autoResize'\n\nimport './style.less'\n\nconst defaultColor = ['#6586ec', '#2cf7fe']\n\nconst BorderBox = forwardRef(({ children, className, style, color = [] }, ref) => {\n  const { width, height, domRef } = useAutoResize(ref)\n\n  const mergedColor = useMemo(() => deepMerge(deepClone(defaultColor, true), color || []), [color])\n\n  const classNames = useMemo(() => classnames('dv-border-box-13', className), [\n    className\n  ])\n\n  return (\n    <div className={classNames} style={style} ref={domRef}>\n      <svg className='dv-border-svg-container' width={width} height={height}>\n        <path\n          fill='transparent'\n          stroke={mergedColor[0]}\n          d={`\n            M 5 20 L 5 10 L 12 3  L 60 3 L 68 10\n            L ${width - 20} 10 L ${width - 5} 25\n            L ${width - 5} ${height - 5} L 20 ${height - 5}\n            L 5 ${height - 20} L 5 20\n          `}\n        />\n\n        <path\n          fill='transparent'\n          strokeWidth='3'\n          strokeLinecap='round'\n          strokeDasharray='10, 5'\n          stroke={mergedColor[0]}\n          d='M 16 9 L 61 9'\n        />\n\n        <path\n          fill='transparent'\n          stroke={mergedColor[1]}\n          d='M 5 20 L 5 10 L 12 3  L 60 3 L 68 10'\n        />\n\n        <path\n          fill='transparent'\n          stroke={mergedColor[1]}\n          d={`M ${width - 5} ${height - 30} L ${width - 5} ${height - 5} L ${width - 30} ${height - 5}`}\n        />\n      </svg>\n      <div className='border-box-content'>\n        {children}\n      </div>\n    </div>\n  )\n})\n\nBorderBox.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  color: PropTypes.array\n}\n\nexport default BorderBox\n"],"names":["defaultColor","BorderBox","forwardRef","ref","children","className","style","color","useAutoResize","width","height","domRef","mergedColor","useMemo","deepMerge","deepClone","classNames","classnames","React","propTypes","PropTypes","node","string","object","array"],"mappings":";;;;;;;;;;;;;;;;AAaA,IAAMA,eAAe,CAAC,SAAD,EAAY,SAAZ,CAArB;;AAEA,IAAMC,YAAYC,iBAAW,gBAA6CC,GAA7C,EAAqD;AAAA,MAAlDC,QAAkD,QAAlDA,QAAkD;AAAA,MAAxCC,SAAwC,QAAxCA,SAAwC;AAAA,MAA7BC,KAA6B,QAA7BA,KAA6B;AAAA,wBAAtBC,KAAsB;AAAA,MAAtBA,KAAsB,8BAAd,EAAc;;AAAA,uBAC9CC,yBAAcL,GAAd,CAD8C;AAAA,MACxEM,KADwE,kBACxEA,KADwE;AAAA,MACjEC,MADiE,kBACjEA,MADiE;AAAA,MACzDC,MADyD,kBACzDA,MADyD;;AAGhF,MAAMC,cAAcC,cAAQ;AAAA,WAAMC,iBAAUC,iBAAUf,YAAV,EAAwB,IAAxB,CAAV,EAAyCO,SAAS,EAAlD,CAAN;AAAA,GAAR,EAAqE,CAACA,KAAD,CAArE,CAApB;;AAEA,MAAMS,aAAaH,cAAQ;AAAA,WAAMI,mBAAW,kBAAX,EAA+BZ,SAA/B,CAAN;AAAA,GAAR,EAAyD,CAC1EA,SAD0E,CAAzD,CAAnB;;AAIA,SACEa;AAAA;AAAA,MAAK,WAAWF,UAAhB,EAA4B,OAAOV,KAAnC,EAA0C,KAAKK,MAA/C;AACE;AAAA;AAAA,QAAK,WAAU,yBAAf,EAAyC,OAAOF,KAAhD,EAAuD,QAAQC,MAA/D;AACE;AACE,cAAK,aADP;AAEE,gBAAQE,YAAY,CAAZ,CAFV;AAGE,mFAEMH,QAAQ,EAFd,gBAEyBA,QAAQ,CAFjC,6BAGMA,QAAQ,CAHd,WAGmBC,SAAS,CAH5B,gBAGsCA,SAAS,CAH/C,4BAIQA,SAAS,EAJjB;AAHF,QADF;AAYE;AACE,cAAK,aADP;AAEE,qBAAY,GAFd;AAGE,uBAAc,OAHhB;AAIE,yBAAgB,OAJlB;AAKE,gBAAQE,YAAY,CAAZ,CALV;AAME,WAAE;AANJ,QAZF;AAqBE;AACE,cAAK,aADP;AAEE,gBAAQA,YAAY,CAAZ,CAFV;AAGE,WAAE;AAHJ,QArBF;AA2BE;AACE,cAAK,aADP;AAEE,gBAAQA,YAAY,CAAZ,CAFV;AAGE,mBAAQH,QAAQ,CAAhB,WAAqBC,SAAS,EAA9B,aAAsCD,QAAQ,CAA9C,WAAmDC,SAAS,CAA5D,aAAmED,QAAQ,EAA3E,WAAiFC,SAAS,CAA1F;AAHF;AA3BF,KADF;AAkCE;AAAA;AAAA,QAAK,WAAU,oBAAf;AACGN;AADH;AAlCF,GADF;AAwCD,CAjDiB,CAAlB;;AAmDAH,UAAUkB,SAAV,GAAsB;AACpBf,YAAUgB,yBAAUC,IADA;AAEpBhB,aAAWe,yBAAUE,MAFD;AAGpBhB,SAAOc,yBAAUG,MAHG;AAIpBhB,SAAOa,yBAAUI;AAJG,CAAtB;;;;"}