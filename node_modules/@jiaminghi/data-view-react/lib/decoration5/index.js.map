{"version":3,"file":"index.js","sources":["../../src/components/decoration5/index.js"],"sourcesContent":["import React, { useMemo, forwardRef } from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport classnames from 'classnames'\n\nimport { getPolylineLength, deepMerge } from '@jiaminghi/charts/lib/util'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nimport useAutoResize from '../../use/autoResize'\n\nimport './style.less'\n\nconst defaultColor = ['#3f96a5', '#3f96a5']\n\nconst Decoration = forwardRef(({ className, style, color = [] }, ref) => {\n  const { width, height, domRef } = useAutoResize(ref)\n\n  function calcSVGData() {\n    let line1Points = [\n      [0, height * 0.2],\n      [width * 0.18, height * 0.2],\n      [width * 0.2, height * 0.4],\n      [width * 0.25, height * 0.4],\n      [width * 0.27, height * 0.6],\n      [width * 0.72, height * 0.6],\n      [width * 0.75, height * 0.4],\n      [width * 0.8, height * 0.4],\n      [width * 0.82, height * 0.2],\n      [width, height * 0.2]\n    ]\n\n    let line2Points = [[width * 0.3, height * 0.8], [width * 0.7, height * 0.8]]\n\n    const line1Length = getPolylineLength(line1Points)\n    const line2Length = getPolylineLength(line2Points)\n\n    line1Points = line1Points.map(point => point.join(',')).join(' ')\n    line2Points = line2Points.map(point => point.join(',')).join(' ')\n\n    return { line1Points, line2Points, line1Length, line2Length }\n  }\n\n  const mergedColor = useMemo(() => deepMerge(deepClone(defaultColor, true), color || []), [color])\n\n  const { line1Points, line2Points, line1Length, line2Length } = useMemo(\n    calcSVGData,\n    [width, height]\n  )\n\n  const classNames = useMemo(() => classnames('dv-decoration-5', className), [\n    className\n  ])\n\n  return (\n    <div className={classNames} style={style} ref={domRef}>\n      <svg width={width} height={height}>\n        <polyline\n          fill='transparent'\n          stroke={mergedColor[0]}\n          strokeWidth='3'\n          points={line1Points}\n        >\n          <animate\n            attributeName='stroke-dasharray'\n            attributeType='XML'\n            from={`0, ${line1Length / 2}, 0, ${line1Length / 2}`}\n            to={`0, 0, ${line1Length}, 0`}\n            dur='1.2s'\n            begin='0s'\n            calcMode='spline'\n            keyTimes='0;1'\n            keySplines='0.4,1,0.49,0.98'\n            repeatCount='indefinite'\n          />\n        </polyline>\n        <polyline\n          fill='transparent'\n          stroke={mergedColor[1]}\n          strokeWidth='2'\n          points={line2Points}\n        >\n          <animate\n            attributeName='stroke-dasharray'\n            attributeType='XML'\n            from={`0, ${line2Length / 2}, 0, ${line2Length / 2}`}\n            to={`0, 0, ${line2Length}, 0`}\n            dur='1.2s'\n            begin='0s'\n            calcMode='spline'\n            keyTimes='0;1'\n            keySplines='.4,1,.49,.98'\n            repeatCount='indefinite'\n          />\n        </polyline>\n      </svg>\n    </div>\n  )\n})\n\nDecoration.propTypes = {\n  className: PropTypes.string,\n  style: PropTypes.object,\n  color: PropTypes.array\n}\n\nexport default Decoration\n"],"names":["defaultColor","Decoration","forwardRef","ref","className","style","color","useAutoResize","width","height","domRef","calcSVGData","line1Points","line2Points","line1Length","getPolylineLength","line2Length","map","point","join","mergedColor","useMemo","deepMerge","deepClone","classNames","classnames","React","propTypes","PropTypes","string","object","array"],"mappings":"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"}